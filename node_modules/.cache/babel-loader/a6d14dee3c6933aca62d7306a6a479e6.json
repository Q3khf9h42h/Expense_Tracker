{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Downloads\\\\Expense-Tracker-with-Authentication-main\\\\Expense-Tracker-with-Authentication-main\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from 'react';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpensesChart(props) {\n  const chartDatapoint = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.toDate().getMonth();\n    chartDatapoint[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDatapoint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDatapoint","label","value","expense","expenses","expenseMonth","date","toDate","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Downloads/Expense-Tracker-with-Authentication-main/Expense-Tracker-with-Authentication-main/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react'\r\nimport Chart from '../Chart/Chart';\r\n\r\nfunction ExpensesChart(props) {\r\nconst chartDatapoint = [\r\n    {label:'Jan' , value: 0},\r\n    {label:'Feb' , value: 0},\r\n    {label:'Mar' , value: 0},\r\n    {label:'Apr' , value: 0},\r\n    {label:'May' , value: 0},\r\n    {label:'Jun' , value: 0},\r\n    {label:'Jul' , value: 0},\r\n    {label:'Aug' , value: 0},\r\n    {label:'Sep' , value: 0},\r\n    {label:'Oct' , value: 0},\r\n    {label:'Nov' , value: 0},\r\n    {label:'Dec' , value: 0}\r\n]\r\n\r\nfor( const expense of props.expenses){\r\n    const expenseMonth = expense.date.toDate().getMonth();\r\n    chartDatapoint[expenseMonth].value += expense.amount\r\n}\r\n\r\n  return <Chart dataPoints={chartDatapoint}/>\r\n  \r\n}\r\n\r\nexport default ExpensesChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC9B,MAAMC,cAAc,GAAG,CACnB;IAACC,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAE;EAAC,CAAC,CAC3B;EAED,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAC;IACjC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACrDR,cAAc,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACM,MAAM;EACxD;EAEE,oBAAOZ,OAAA,CAACF,KAAK;IAACe,UAAU,EAAEV;EAAe;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE7C;AAACC,EAAA,GAvBQjB,aAAa;AAyBtB,eAAeA,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}